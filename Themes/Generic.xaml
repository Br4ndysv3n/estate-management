<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries />
    <Style TargetType="Label">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="InputTextBox"
           BasedOn="{StaticResource {x:Type TextBox}}"
           TargetType="{x:Type TextBox}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Text" Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        <Setter Property="AutomationProperties.Name">
            <Setter.Value>
                <PriorityBinding>
                    <Binding Path="Tag"
                             RelativeSource="{RelativeSource AncestorType={x:Type ContentPresenter}}" />
                </PriorityBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="MaxLength" Value="{Binding MaxLength}" />

        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <TextBlock Text="{Binding MaxLength, StringFormat={}\{0\} Zeichen verfügbar}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding IsObligatory}" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <TextBlock Text="{Binding MaxLength, StringFormat='{}Pflichtfeld {0} Zeichen verfügbar'}" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputComboBox"
           BasedOn="{StaticResource {x:Type ComboBox}}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="InputDatePicker"
           BasedOn="{StaticResource {x:Type DatePicker}}"
           TargetType="{x:Type DatePicker}">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="InputButton"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="5" />
    </Style>

</ResourceDictionary>
